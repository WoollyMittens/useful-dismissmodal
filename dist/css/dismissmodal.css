/*
Constants
*/
/*
Hides text in the margin
*/
/*
Turns a button into an icon
*/
/*
Centres a graphic or glyph inside an icon
*/
/*
Offers both the pixel and rem value of a single property
*/
/*
Offers both the pixel and rem values of a shorthand property
*/
/*
Offers the text size as both the pixel and rem value
*/
/*
Adds vendor prefixed to a property
*/
/*
Applies the "clearfix" hack to a container with floating content
*/
dl.dm {
  background-color: #fff;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  border: solid 1px #333;
  max-height: 3rem;
  overflow: hidden;
  transition: max-height ease-in-out 500ms;
  margin: 2rem;
  padding: 0; }
  dl.dm *, dl.dm *:before, dl.dm *:after {
    box-sizing: border-box; }
  dl.dm a {
    display: -webkit-flex;
    display: flex;
    -webkit-align-items: center;
    align-items: center;
    color: #000;
    text-decoration: none;
    height: 3rem;
    background-color: #fff;
    padding: 0.5rem 1rem;
    background-size: auto 2rem;
    background-repeat: no-repeat;
    background-position: left 1rem center; }
    dl.dm a:hover {
      background-color: #eee; }
  dl.dm dt {
    margin: 0;
    padding: 0; }
    dl.dm dt a {
      background-color: #ff6a00;
      color: #fff;
      font-weight: bold;
      background-image: url("../img/icon-menu.svg");
      -webkit-justify-content: center;
      justify-content: center; }
      dl.dm dt a:hover {
        background-color: #ff9800; }
  dl.dm dd {
    margin: 0;
    padding: 0; }
    dl.dm dd a {
      border-top: solid 1px #333; }
  dl.dm-opened {
    max-height: 20rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
